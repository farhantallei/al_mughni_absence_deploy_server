// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Absent {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  pelajarId  String    @db.ObjectId
  pengajarId String?   @db.ObjectId
  programId  String    @db.ObjectId
  date       DateTime  @db.Date
  present    Boolean
  reason     String?
  createdAt  DateTime  @default(now())
  pelajar    Pelajar   @relation(fields: [pelajarId], references: [id])
  pengajar   Pengajar? @relation(fields: [pengajarId, programId], references: [pelajarId, programId])

  @@unique([pelajarId, programId, date])
}

model Pelajar {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  username          String              @unique
  name              String
  absent            Absent[]
  pengajar          Pengajar[]
  PelajarOnPengajar PelajarOnPengajar[]
}

model Pengajar {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  pelajarId         String              @db.ObjectId
  programId         String              @db.ObjectId
  pelajar           Pelajar             @relation(fields: [pelajarId], references: [id])
  program           Program             @relation(fields: [programId], references: [id])
  absen             Absent[]
  schedule          Schedule[]
  PelajarOnPengajar PelajarOnPengajar[]

  @@unique([pelajarId, programId])
}

model Program {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String     @unique()
  individual Boolean    @default(false)
  pengajar   Pengajar[]
}

model Schedule {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  pengajarId String   @db.ObjectId
  programId  String   @db.ObjectId
  date       DateTime @db.Date
  available  Boolean
  reason     String?
  pengajar   Pengajar @relation(fields: [pengajarId, programId], references: [pelajarId, programId])

  @@unique([pengajarId, programId, date])
}

model PelajarOnPengajar {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  pelajarId  String   @db.ObjectId
  pengajarId String   @db.ObjectId
  programId  String   @db.ObjectId
  pelajar    Pelajar  @relation(fields: [pelajarId], references: [id])
  pengajar   Pengajar @relation(fields: [pengajarId, programId], references: [pelajarId, programId])

  @@unique([pelajarId, programId])
}
